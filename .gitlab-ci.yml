variables:
    TWINE_USERNAME: SECURE
    TWINE_PASSWORD: SECURE
    TWINE_REPOSITORY_URL: https://test.pypi.org/legacy/

stages:
    - deploy
    - status

build:
    image: ubuntu:16.04
    stage: deploy
    before_script:
        - apt -y -qq update
        - apt -y -qq upgrade
        - apt install -y -qq build-essential
        - apt install -y -qq bison flex git
        - apt install -y -qq python3-dev python3-pip
        - python3 -m pip install -U pip
        - python3 -m pip install -U setuptools wheel twine
        - python3 -m pip install -U anybadge
        - git clone https://github.com/swig/swig.git
        - cd swig
        - git checkout rel-4.0.0
        - ./autogen.sh
        - ./configure
        - make
        - make install
    script:
        - python3 setup.py sdist bdist_wheel
        - if twine upload dist/*.tar.gz --verbose && twine upload dist/*.whl --verbose; then echo "PASSED JOB" && anybadge --label=pipeline --value=passing --file=build.svg passing=green failing=red; else echo "FAILED JOB" && anybadge --label=pipeline --value=failing --file=build.svg passing=green failing=red; fi
        - mkdir -p public; mv build.svg public/build.svg
    artifacts:
        paths:
            - public/
            - build/
            - dist/
            - cfd_reader.egg-info/
            - setup.py
    only:
        changes:
            - .pipeline.trigger
    allow_failure: true
    environment:
        name: dev

pages:
    stage: status
    dependencies:
        - build
    script:
        - mkdir -p public
    artifacts:
        paths:
            - public/
    only:
        changes:
            - .pipeline.trigger
